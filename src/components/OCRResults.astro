---
// src/components/OCRResults.astro
// Componente para mostrar resultados del OCR y generar PDF

import type { OCRResult } from '../lib/ocrProcessor';

interface Props {
  results: OCRResult[];
  onGeneratePDF: () => void;
}

const { results, onGeneratePDF } = Astro.props;
---

<div class="card">
  <h2 class="section-title mb-6">Resultados del OCR</h2>
  
  <!-- Lista de resultados -->
  <div class="space-y-4 mb-8">
    {results.map((result) => (
      <div 
        class="border border-gray-200 rounded-lg p-4 transition-all hover:shadow-md"
        class:list={["bg-yellow-50 border-yellow-200": result.status === "pending", 
                     "bg-blue-50 border-blue-200": result.status === "processing",
                     "bg-green-50 border-green-200": result.status === "completed",
                     "bg-red-50 border-red-200": result.status === "error"]}
      >
        <div class="flex justify-between items-start">
          <div>
            <h3 class="font-medium text-gray-900">{result.fileName}</h3>
            <div class="mt-2 grid grid-cols-2 gap-2 text-sm">
              <div><span class="font-medium">Cliente:</span> {result.client || "N/A"}</div>
              <div><span class="font-medium">Venta:</span> {result.saleId || "N/A"}</div>
              <div><span class="font-medium">Tracking:</span> {result.tracking || "N/A"}</div>
              <div><span class="font-medium">Fecha Entrega:</span> {result.deliveryDate || "N/A"}</div>
              <div><span class="font-medium">CP:</span> {result.postalCode || "N/A"}</div>
              <div><span class="font-medium">Localidad:</span> {result.locality || "N/A"}</div>
              <div><span class="font-medium">Dirección:</span> {result.address || "N/A"}</div>
              <div><span class="font-medium">Destinatario:</span> {result.recipient || "N/A"}</div>
            </div>
          </div>
          
          <div class="flex items-center">
            {result.status === "pending" && (
              <span class="px-2 py-1 text-xs font-medium bg-yellow-100 text-yellow-800 rounded-full">
                Pendiente
              </span>
            )}
            {result.status === "processing" && (
              <span class="px-2 py-1 text-xs font-medium bg-blue-100 text-blue-800 rounded-full">
                Procesando
              </span>
            )}
            {result.status === "completed" && (
              <span class="px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">
                Completado
              </span>
            )}
            {result.status === "error" && (
              <span class="px-2 py-1 text-xs font-medium bg-red-100 text-red-800 rounded-full">
                Error
              </span>
            )}
          </div>
        </div>
        
        {result.error && (
          <div class="mt-2 text-red-600 text-sm">
            <span class="font-medium">Error:</span> {result.error}
          </div>
        )}
      </div>
    ))}
  </div>
  
  <!-- Botón para generar PDF -->
  <button 
    class="btn-primary w-full"
    onclick={() => onGeneratePDF()}
  >
    Generar PDF con Resultados
  </button>
</div>
